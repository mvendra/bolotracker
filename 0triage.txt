
[
* Break the dependency of the tests
* consider refactoring all the write operations to accept the pk-strings instead of foreign keys
* everywhere where im expecting a fk, scratch that. allow a pk-string to be passed instead.
* Dont remove addition by fk, just add extra ops that accept pk strings
]

[
@finish the model design and api
* implement getters by dataobjects, model (they must reuse model's already in place getters)
* Plus additional helpers: list everything by name/pk (for example)
* welp, i suppose the TUI and others will have to use model to get pk's to reference where and what they wanna add
* i just need stuff like getPkByName, and etc - by the "secondary" pk's such as name, tag, etc.
* and listing is alot easier. list by name, by pk, whatever.
]

[
@next up
* then test using those, FFS (dataobjects)
]

[
* double-and-triple check, test lots of cases, before ever putting this into production.
* one miswire, and i could potentially accumulate heaps of financial data!!!
* also check new constraints, not null and etc
]

[
@finish the TUI
]

[
* try running static alanysis tools too. check for dead code and whatnot.
* Will have to update bolotrackers makefile
]

[
@gui, first strike
* just fltk, listing all three basic tables
* and a close button. done.
* just to try out adding another lib, plus testing the controller interface
]

* can all mvtags

[
@gui priority list
* fltk
* CEGUI
* wxwidgets
* gtk+
* qt
* tkinder+python
* could even be served via python+flask (rest api) and have a html+css frontend
]

[
@future
* publish it later
]

